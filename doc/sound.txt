Current we need to:

- implement setFrequency
keywords:
"PCM", "DSP" and "pitch-shift" (possibly in combination with "C++")
http://www.devolution.com/pipermail/sdl/2004-October/065449.html
Or switch to OpenAL and keep SDL_Mixer (Allegro?) only for MIDIs.

I don't think that actually can be done in SDL_Mixer. Rationale (may
be wrong): I want to play a sound a looooow speed. I then need more
time, so a longer sample. The sample I'm given when developping a mix
effect has a fixed length, or at least I can't modify it. So my sound
will most likely be truncated. So much for SDL_Mixer.

However, SDL_Mixer is good for background (MIDIs and audio CDs - it's
rare to find something to read audio CDs). So we should try to use it
in combination with OpenAL (or Allegro (or...)).

- sound_set_vol in DinkC

- function to convert volume and panning from dB to the unit we'll use

- separate initsound from sfx - it's sfx+bgm

- If 100X is played, and if there's no CD, and if 100X.mid doesn't
  exist, I think the original game will play X.mid. Take that into
  account.

Note:

- soundplayeffect return a non-0 bank number; it's used by DinkC's
  playsound(). Beware!

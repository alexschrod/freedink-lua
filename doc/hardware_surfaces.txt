From what I understand, 2D hardware surfaces are on the decline (less
support in documentation, software libraries, and even hardware) and
the preferred way to store surfaces on the graphic card is to use
OpenGL. Anyway:


The SDL documentation wiki refers people to this article for hardware
surfaces:
http://www.linuxdevcenter.com/pub/a/linux/2003/08/07/sdl_anim.html

It doesn't give this much information though.


Another nice FAQ stating that GNU/Linux solutions are DGA, fbdev and
DirectFB:
http://sdl.beuc.net/sdl.wiki/FAQ_No_Hardware_Acceleration


The only way I could get SDL_SetVideoMode to return a hardware surface
is:

- Become root (!)

- Set the SDL_VIDEODRIVER=dga environment variable

I tried this with test/sdl/mousetest.c modified to run full-screen,
and I noticed the (non-system) mouse didn't show up. Actually I'm not
sure it really worked, since without the mouse, the test doesn't do
anything but set the video mode and paint the screen in blue. Pretty
strange.


I have yet to try the framebuffer though, my system currently doesn't
have /dev/fb0, I gotta investigate.

According to http://tldp.org/HOWTO/Linux-Gamers-HOWTO/x130.html ,
SVGAlib also requires root privileges to initiate the video mode.

DRI appears to be aimed at 3D graphics, not 2D. We could imagine
getting a 2D hardware surface from the 3D card (when the user has one)
and perform 2D direct video memory buffer access from it.


Trying under Woe with the default driver didn't trigger an hardware
surface either.  This is probably because I tested on a S3 ProSavage
card, which I think only use system memory.

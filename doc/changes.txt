If cd is not present and use a midi > 1000, then play that midi, and
not #midi-1000. That's what is done with playmidi() - although this is
actually a bug :) The code should also play #midi-1000 there, but
there's a missing "return;", and thus the game plays #midi right
after.

If a cd is present, it is taken into account (for playing 100X tracks)
even if it doesn't have exactly 19 tracks.

The two WAVE files played by Dinkedit were extracted from Dinkedit.exe
v1.06's resources and are now external. Incidentally those were
missing (as well as the application icon) in Dinkedit v1.07. Also,
stop.wav had to be converted by Audacity to get accepted by SDL_Mixer
("Complex WAVE files not supported").


Avoid color/palette glitch after show_bmp() is finished, by switching
the physical/screen palette only when the double buffer is ready to be
Flip()ed.


If you change SPLASH.BMP's palette (use utils/bmpinvert.cpp, for
example) and without changing Ts01.BMP accordingly, graphics are
seriously messed up in the original game (ie. because the main palette
is first set to SPLASH.BMP, tiles are dithered to that palette; then
those palette indexes are maintained but displayed with Ts01.BMP's
palette on the screen; graphics are not affected because load_sprite
explicitely and temporarily sets the palette to real_pal aka Ts01.BMP
before loading the script, so dithering won't happen in that case).
It seems I fixed that in FreeDink (even when DX was still available
for testing), probably with a early doInit() clean-up where I removed
redundant definitions of the main palette. I doubt there's a point in
re-implementing that bug - I don't think that was ever used as a
"feature" ;)


Enabled screen scrolling in windowed mode (it was explicitely disabled
in command-line options parsing - maybe there was a reason for this?).

In windowed mode, fill_screen doesn't use the right palette to select
colours. It also does not support fade_down() and fade_up(). This is
fixed with SDL. In theory the fact that sprites were weirdly displayed
in non-8-bit modes should be fixed as well - it was due to raw access
to the buffer memory assuming that the mode with 8-bit.


In init_scripts, the script may check the active status of sprite
1000, while the sprite array has 300 elements. This caused bugs after
the port and is now fixed. Curiously it didn't seem to cause bugs
before.


Gamepad: I didn't test much with the original game, but I set a
greater threshold for joystick axis - with the same threshold than the
original game (~10%) Dink is going diags too easily.


Compressed BMP support: afaics in some situations, the original Dink
engines does not support compressed (RLE?) BMPs. Such BMPs are notably
used in "Prophecy of the Ancients" (like the 3 alternate colored orbs)
- when support is lacking, graphics are simply not displayed which
much complaining in DEBUG.TXT. I believe this support depends on which
DX version is used. More surprisingly: there's a screen, still in
PotA, where you can pass above and under and bridge (you need to pass
under the bridge to blow up a rock in the above screen and thus reach
the secret island). There's no way to pass under the bridge when
there's no compressed BMP support - I haven't investigated much, but I
guess either a missing sprite does not clear the hardness for Dink to
pass, either the missing sprite is causing a DinkC script to stop.
So, vanilla SDL does not support compressed BMPs, so I used SDL_image
everywhere to do so. This means that FreeDink always support
compressed BMPs.


The engine now can switch between fullscreen and window mode at
run-time, using the Ctrl+Enter shortcut.


Dinkedit 1.07 does not play sounds anymore (v1.06 did): now plays
external .wav, grabbed in Dinkedit 1.06 resources.


Dinkedit creates a custom sequence #1 but mark the 4th frame as
-1. This made FreeDinkEdit crash, so it's set to 0, which means "end
of sequence".

To avoid issues with non-US keyboards in the editor, F1->F10-F11 and
NumPad 0->9-. are used in addition to 1->0-` for tiles selection.


When vision is changed from the minimap mode in the editor, don't
display the current screen's sprites over the minimap.


When text or number is asked in the editor, user now can press
'escape' to discard changes.

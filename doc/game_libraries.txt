From a game library point of view, the game has 3 parts:

- sound
  BGM = MIDI (+ less important: audio CD);
  SFX = WAV with multiple channels/banks, pseudo-3D positionning
  (per-channel volume and panning), real-time frequency change

- graphics
  - 2D, 640*480*256
  - windowed or full-screen
  - stretching/scaling
  - fonts (TTF)

- input
  - keyboard
  - joystick


Choice:
~~~~~~~

If chose SDL because the previous port was made using SDL, so there is
already a semi-working port that I can study during the initial port
to the GNU OS.

So there is no definite, justified choice to use SDL. It really was
the easier way for me to perform an initial and clean cross-platform
port.



Alternatives:
~~~~~~~~~~~~~

General-purpose:

- Allegro is another interesting alternative. I think it would be good
  to eventually get FreeDink be able to compile with either library -
  at least that would make the code more flexible if SDL ever get
  replaced by something else (beware, though, that the engine needs to
  behave exactly the same whichever way it is compiled, so better
  avoid that for releases). Allegro tend to get everything included in
  the main library, while SDL separates a core library from additional
  ones (SDL_mixer, SDL_image, SDL_gfx, SDL_ttf...).

- DX: that's what we come from, it's proprietary and not portable, so
  of course we won't use it back.

- SFML (Simple and Fast Multimedia Library): apparently this is
  something still young (the SF project was imported 02/2007). Because
  of this, I think it lacks support for several "old" features that
  Dink needs, such as graphics palettes, MIDI playback, and the
  ability to work without OpenGL (that is, get decent performances
  without a 3D card). It does not have C bindings, only C++ ones.


Some component-specific libraries are:

- Graphics: Mesa (OpenGL), that apparently could take care of all the
  2D graphical part. TODO: check if there's a version of Mesa for Woe.

- SFX: OpenAL for a good SFX (no MIDI, no audio CD) mixer. Audiere
  (1.9.4 - 2/2006 - no portable midi) might be good as well. SDL_Mixer
  is not the only lib for SDL, check Audiality (0.1.1 - 1/2004 - dev).



Comparison:
~~~~~~~~~~~

It would be good to make a spreadsheet and show the possible combinations.

The conclusion is that no library does _everything_ we need, but the
sum of all their features do.

([TODO] means I need to actually test the libraries.)

- Stretching:

  [/] SDL_gfx does. Maybe the scaling algorithm is not exactly the
  same, I've seen some ugly tree shades in POTA, I'm not sure it was
  intentional.

  [V] [TODO] SDL_strech should do.

  [V] [TODO] Allegro does.

  [V] [TODO] Mesa does.

- Fonts (TTF):

  [/] SDL_ttf does but lacks weight support. The height metrics aren't
  the same either. Maybe use FreeType directly.

  [V] [TODO] Allegro plug-in such as AllegTTF, AllegroFont or Glyph
  Keeper; or pre-convert the TTF in a bitmapped format directly usable
  by Allegro (possibly at run time, the tool is TTF2PCX).

  [V] [TODO] OpenGL+SDL_ttf+an SDL surface rendered as a texture. Or
  use FreeType2 directly.


- Input (keyboard, joystick):

  [V] [TODO] SDL should do.

  [V] [TODO] Allegro should do.

  [V] [TODO] GLUT (Mesa, freeglut, OpenGlut) should do.


- Sound Frequency:

  [ ] SDL_mixer does not provide an equivalent to DX'
  DirectSoundBuffer::setFrequency, and [TODO] I don't think it can be
  implement on top of it (check sound.txt)
 
  [V] Allegro does. play_sample() and adjust_sample have a frequency
  argument. The sample is computed on the fly, i.e. it is not a
  precomputed new sample with a different frequency which is then
  played. The frequency is expressed in o/oo (eg 2000 = 2x as fast,
  500 = 2x as slow), instead of DX's explicit final Hz frequency (eg
  44100) :/

  [V] [TODO] OpenAL does.

  [V] [TODO] Audiere does.

- MIDIs:

  Generally: I never could use the hardware MIDI features of my sound
  cards (when they still had support for it) under GNU/Linux. I always
  had to resort to software emulation.

  Sum up: SDL_mixer + its included timidity is the only viable
  solution under GNU/Linux. Under Woe, most libraries can use the
  low-level mci MIDI player, but the game stops for several seconds
  when loading a new MIDI file (software emulation is not fully "on
  the fly"). There seems to be a workaround using a DX new feature
  (check the "Dink Aural" version from Dan Walma for details).

  What we really need to test now is whether it is possible to use
  multiple audio libraries at once.

  [V] SDL_mixer does that perfectly, independently from SFX.

  [ ] Allegro's DIGMID driver seems suboptimal: under Debian, I can't
  get it to output any sound, with the digmid.dat from
  http://alleg.sourceforge.net/digmid.html or from TiMidity++
  configs); under Fedora, I get no sound using digmid.dat and a
  low-quality output using the TiMidity++ config.

  [ ] OpenAL doesn't.

  [ ] [TODO] Check/test the Woe/mci lag issue.
  
- Audio CD:

  [V] SDL does that perfectly, independently.

  [ ] Allegro doesnt.

  [ ] OpenAL doesn't.

  [V] [TODO] Audiere does.

- Quick audio repetition (eg when you get gold)

  [V] What SDL_mixer does is OK - just remember to compile with DX
  support under Woe.


Wishes:
~~~~~~~

Features we plan to add afterwhile...

- Fixed rate

  [V] SDL_gfx does, with interpolation.

- Additional sounds formats (at least Ogg Vorbis, Flac, MP3, possibly MOD)

- 16/24/32 bits support

  [V] SDL does.

  [V] Allegro does.

  [?] Mesa

- Graphics rotation:

  [V] [TODO] SDL_gfx does.

  [V] [TODO] Allegro does.

  [V] [TODO] Mesa does.
